name: Pull Request Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint || echo "Linting failed"

      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless || echo "Tests failed"

      - name: Build project
        run: npm run build || echo "Build failed"

      - name: Post PR Review Summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = `ðŸ¤– **Automated PR Review Complete**
            
            âœ… **Build & Test Results:**
            - Linting: Check logs above
            - Tests: Check logs above  
            - Build: Check logs above
            
            ðŸ“‹ **Review Checklist:**
            - [ ] Code follows Angular best practices
            - [ ] TypeScript types are properly defined
            - [ ] Components follow single responsibility principle
            - [ ] Routes are properly configured
            - [ ] Error handling is implemented
            - [ ] Performance considerations addressed
            - [ ] Security best practices followed
            - [ ] Tests cover new functionality
            - [ ] Documentation is updated
            
            ðŸ’¡ **For detailed AI code review, tag @claude in a comment with specific questions!**
            
            *This automated review ensures basic quality checks. For comprehensive analysis, use Claude Code CLI or tag @claude for assistance.*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: response
            });