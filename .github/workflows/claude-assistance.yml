name: Claude Assistance

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  claude-help:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.body, '@Claude'))) ||
      (github.event_name == 'issue_comment' && (contains(github.event.comment.body, '@claude') || contains(github.event.comment.body, '@Claude'))) ||
      (github.event_name == 'pull_request_review_comment' && (contains(github.event.comment.body, '@claude') || contains(github.event.comment.body, '@Claude')))
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract question from comment or issue
        id: extract_question
        run: |
          if [ "${{ github.event_name }}" = "issues" ]; then
            CONTENT_BODY="${{ github.event.issue.body }}"
          else
            CONTENT_BODY="${{ github.event.comment.body }}"
          fi
          # Remove @claude mention and clean up the question
          QUESTION=$(echo "$CONTENT_BODY" | sed 's/@[Cc]laude//g' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          echo "question=$QUESTION" >> $GITHUB_OUTPUT
          echo "Question extracted: $QUESTION"

      - name: Create Claude response comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const question = `${{ steps.extract_question.outputs.question }}`;
            
            // Simple response for now - you can enhance this with actual AI integration
            const response = `ðŸ¤– **Claude AI Assistant**
            
            Thank you for tagging me! I see your question:
            > ${question}
            
            I'm an AI assistant ready to help with your Angular 17 e-commerce project. Here are some ways I can assist:
            
            - **Angular Best Practices**: Component architecture, routing, services
            - **TypeScript Patterns**: Type safety, interfaces, decorators
            - **Testing Strategies**: Unit tests, integration tests, e2e tests
            - **Performance Optimization**: Change detection, lazy loading, bundling
            - **Code Review**: Security, maintainability, scalability
            
            For specific code help, please share:
            1. Relevant code snippets
            2. Error messages (if any)
            3. Expected vs actual behavior
            
            *Note: To get more detailed assistance, consider using Claude Code CLI or integrate with Anthropic's API for full AI responses.*`;
            
            if (context.eventName === 'issues') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: response
              });
            } else {
              // For comments, reply to the same issue/PR
              const issueNumber = context.payload.issue?.number || context.payload.pull_request?.number;
              if (issueNumber) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: response
                });
              }
            }